Problem Statement
The Git repository contained several large files that significantly increased its size, making operations slow and potentially reaching limits imposed by remote hosting services like GitHub.

Objective
Remove large and unnecessary files from the repository's history, reduce the repository size, and implement best practices to prevent similar issues in the future.

Tools Used
Git: Version control system to manage source code history.
BFG Repo-Cleaner: A simpler, faster alternative to git filter-branch for cleaning up bad data from Git repository history.
Git LFS (Large File Storage): Used for managing large files without bloating the repository history.
Step-by-Step Solution

1. Identify Large Files
Used the following Git commands to list the largest objects in the repository:
bash
Copy code
git rev-list --all --objects | \
git cat-file --batch-check='%(objecttype) %(objectname) %(objectsize) %(rest)' | \
sort -nk3 | \
tail -n 10
This helped identify specific large files that needed to be removed or managed differently.

2. git rm --cached path/to/large_file
git commit -am "Remove large file not intended for version control"


3. Manual File Removal and History Rewriting
When BFG did not update the refs as expected, switched to manual removal using git filter-branch:
bash
Copy code
git filter-branch --force --index-filter "git rm --cached --ignore-unmatch path_to_large_file" --prune-empty --tag-name-filter cat -- --all

e.g
git filter-branch --force --index-filter \
"git rm --cached --ignore-unmatch \
Docker/volume_container/mysql/time_zone_name.ibd \
Docker/volume_container/mysql/time_zone_transition_type.ibd \
Docker/volume_container/mysql/help_topic.ibd \
Docker/volume_container/mysql/time_zone_transition.ibd \
Docker/volume_container/ib_logfile1 \
Docker/volume_container/ib_logfile0 \
Docker/volume_container/ibdata1 \
terraform/.terraform/providers/registry.terraform.io/hashicorp/aws/5.63.0/linux_amd64/terraform-provider-aws_v5.63.0_x5 \
terraform-02/.terraform/providers/registry.terraform.io/hashicorp/aws/5.64.0/linux_amd64/terraform-provider-aws_v5.64.0_x5" \
--prune-empty --tag-name-filter cat -- --all

4. Repository Cleanup
Executed Git garbage collection to clean up and compress the repository data:
bash
Copy code
git for-each-ref --format="delete %(refname)" refs/original | git update-ref --stdin
git reflog expire --expire=now --all
git gc --prune=now --aggressive

5. Verification and Force Push
Verified the repository's size and functionality:
bash
Copy code
du -sh .git/







